/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-04-03 02:46:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getInstance();
  _jspx_fnmap_0.mapFunction("fn:substring", org.apache.taglibs.standard.functions.Functions.class, "substring", new Class[] {java.lang.String.class, int.class, int.class});
  _jspx_fnmap_0.mapFunction("fn:length", org.apache.taglibs.standard.functions.Functions.class, "length", new Class[] {java.lang.Object.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <title>HRMS Mail Services</title>\n");
      out.write("\n");
      out.write("    <!-- Bootstrap -->\n");
      out.write("    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"css/docs.min.css\" rel=\"stylesheet\">\n");
      out.write("    <style>\n");
      out.write("        span.label{\n");
      out.write("            padding: 5px;\n");
      out.write("        }\n");
      out.write("        div.row-fluid{\n");
      out.write("            margin-top: 2px;\n");
      out.write("            margin-bottom: 2px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .round-col-primary{\n");
      out.write("            background-color: #a6c9e2;\n");
      out.write("            border-radius: 5px;\n");
      out.write("\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .bs-example{\n");
      out.write("            background-color: #f7f7f9;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    </style>\n");
      out.write("    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n");
      out.write("    <!--[if lt IE 9]>\n");
      out.write("    <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n");
      out.write("    <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n");
      out.write("    <![endif]-->\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<div class=\"container-fluid\">\n");
      out.write("    <div class=\"row-fluid\">\n");
      out.write("        <div class=\"col-md-12\">\n");
      out.write("            <h1>HRMS Mail Services</h1>\n");
      out.write("            <h4>Services for get data from HRMS_Mail System</h4>\n");
      out.write("            <h4>Usage: ");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("/rest/[services] </h4>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container-fluid\">\n");
      out.write("    <div class=\"row-fluid\">\n");
      out.write("        <div class=\"col-md-7\">\n");
      out.write("            <div class=\"panel panel-primary\">\n");
      out.write("                <div class=\"panel-heading\">EmailTemplate Services</div>\n");
      out.write("                <div class=\"panel-body\">\n");
      out.write("                    <div class=\"row-fluid\">\n");
      out.write("                        <div class=\"bs-example\" data-example-id=\"glyphicons-accessibility\" >\n");
      out.write("                            <div class=\"col-md-4 round-col-primary\">\n");
      out.write("                                find All EmailTemplate\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-8\">\n");
      out.write("                                <span id=\"e_1\" class=\"HRMSURL\">");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("/rest/mail/findAllEmailTemplate</span>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"clearfix\"></div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"highlight\" >\n");
      out.write("                            <p>ค้นหารูปแบบอีเมล์ทั้งหมด</p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"clearfix\"></div>\n");
      out.write("                    <div class=\"row-fluid\">\n");
      out.write("                        <div class=\"bs-example\" data-example-id=\"glyphicons-accessibility\">\n");
      out.write("                            <div class=\"col-md-4 round-col-primary\"> find EmailTemplate By Code</div>\n");
      out.write("                            <div class=\"col-md-8\">\n");
      out.write("                                <span id=\"e_2\" class=\"HRMSURL\">");
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("/rest/mail/findAllEmailTemplate/{code}</span>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"clearfix\"></div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"highlight\"><p>ค้นหารูปแบบอีเมล์ By Code</p></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>   \n");
      out.write("    </div>\n");
      out.write("    <div class=\"row-fluid\">\n");
      out.write("        <div class=\"col-md-7\">\n");
      out.write("            <div class=\"panel panel-primary\">\n");
      out.write("                <div class=\"panel-heading\">SendEmail Services</div>\n");
      out.write("                <div class=\"panel-body\">\n");
      out.write("                    <div class=\"row-fluid\">\n");
      out.write("                        <div class=\"bs-example\" data-example-id=\"glyphicons-accessibility\">\n");
      out.write("                            <div class=\"col-md-4 round-col-primary\"> Send Email</div>\n");
      out.write("                            <div class=\"col-md-8\">\n");
      out.write("                                <span id=\"s_1\" class=\"HRMSURLPOST\">");
      if (_jspx_meth_c_005fout_005f3(_jspx_page_context))
        return;
      out.write("/rest/mail/sendEmail</span>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"clearfix\"></div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"highlight\"><p>ส่งอีเมลล์</p>\n");
      out.write("\n");
      out.write("                        <p>from คือ ระบุว่าจะส่งจากใคร ตัวอย่าง System</p>\n");
      out.write("                        <p>to คือ อีเมลล์ที่จะส่ง ตัวอย่าง xxx@softmail.softsquaregroup.com,yyy@softmail.softsquaregroup.com</p>\n");
      out.write("                        <p>cc คือ อีเมลล์ที่จะสำเนา ตัวอย่าง xxx@softmail.softsquaregroup.com,yyy@softmail.softsquaregroup.com</p>\n");
      out.write("                        <p>files คือ ไฟล์ที่จะแนบ ตัวอย่าง /home/spt,Picture/test.png,/home/spt,Document/test.doc</p>\n");
      out.write("                        <p>code คือ รหัสของ EmailTemplate ตัวอย่าง E_10</p>\n");
      out.write("                        <p>pameters คือ ค่าที่จะใส่ใน EmailTemplate ตัวอย่าง A:xxx,B:yyy</p>\n");
      out.write("\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"clearfix\"></div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"container-fluid\">\n");
      out.write("    <div class=\"row-fluid\">\n");
      out.write("        <div class=\"col-md-12\">\n");
      out.write("            <div class=\"alert alert-info\">\n");
      out.write("                deploy date : 20/03/2015 12:00 Environment : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentURL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"modal fade\" id=\"inputModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"inputModal\" aria-hidden=\"true\">\n");
      out.write("    <div class=\"modal-dialog modal-lg\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n");
      out.write("                    <i class=\"fa fa-times-circle-o\">&#215;</i>\n");
      out.write("                </button>\n");
      out.write("                <h4 class=\"modal-title\" id=\"inputModalLabel\">Input</h4>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"inputBody\" class=\"modal-body\">\n");
      out.write("                <div id=\"inputArea\"></div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button id=\"sendBtn\" type=\"button\" class=\"btn btn-primary\">\n");
      out.write("                    Send\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- Modal -->\n");
      out.write("<div class=\"modal fade\" id=\"modalSendmail\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("  <div class=\"modal-dialog modal-lg\" role=\"document\">\n");
      out.write("    <div class=\"modal-content\">\n");
      out.write("      <div class=\"modal-header\">\n");
      out.write("         <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n");
      out.write("            <i class=\"fa fa-times-circle-o\">&#215;</i>\n");
      out.write("        </button>\n");
      out.write("        <h4 class=\"modal-title\">Input</h4>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-body\">\n");
      out.write("           <div><label>from</label>:<input id=\"from\" type='text' /></div>\n");
      out.write("           <div><label>to</label>:<input id=\"to\" type='text' /></div>\n");
      out.write("           <div><label>cc</label>:<input id=\"cc\" type='text' /></div>\n");
      out.write("           <div><label>files</label>:<input id=\"files\" type='text' /></div>\n");
      out.write("           <div><label>code</label>:<input id=\"code\" type='text' /></div>\n");
      out.write("           <div><label>pameters</label>:<input id=\"pameters\" type='text' /></div>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-footer\">\n");
      out.write("        <div class = \"alert alert-danger\" style=\"display: none;\" id=\"error\">Error !</div>\n");
      out.write("        <div class = \"alert alert-success\" style=\"display: none;\" id=\"success\">Success !</div>\n");
      out.write("        <button id=\"sendEmail\" type=\"button\" class=\"btn btn-primary\">\n");
      out.write("            Send\n");
      out.write("        </button>\n");
      out.write("    </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\n");
      out.write("<script src=\"js/jquery-1.11.1.min.js\"></script>\n");
      out.write("<!-- Include all compiled plugins (below), or include individual files as needed -->\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("    var text;\n");
      out.write("    var fields = [];\n");
      out.write("\n");
      out.write("    $(\"div.col-md-8\")\n");
      out.write("            .mouseover(function() {\n");
      out.write("                $(this).css(\"color\",\"blue\");\n");
      out.write("            })\n");
      out.write("            .mouseout(function() {\n");
      out.write("                $(this).css(\"color\",\"black\");\n");
      out.write("            });\n");
      out.write("\n");
      out.write("\n");
      out.write("    $(\".HRMSURL\")\n");
      out.write("            .click(function() {\n");
      out.write("                renderChild($(this).text());\n");
      out.write("            });\n");
      out.write("\n");
      out.write("    $(\".HRMSURLPOST\").click(function() {\n");
      out.write("        $(\"#modalSendmail\").modal(\"show\");\n");
      out.write("        $('#to').val(\"\");\n");
      out.write("        $('#from').val(\"\");\n");
      out.write("        $('#cc').val(\"\");\n");
      out.write("        $('#files').val(\"\");\n");
      out.write("        $('#code').val(\"\");\n");
      out.write("        $('#pameters').val(\"\");\n");
      out.write("        $(\"#error\").attr(\"style\", \"display: none\");\n");
      out.write("        $(\"#success\").attr(\"style\", \"display: none\");\n");
      out.write("    });\n");
      out.write("\n");
      out.write("\n");
      out.write("    $(\"#sendBtn\").click(function() {\n");
      out.write("        clickSend();\n");
      out.write("    });\n");
      out.write("\n");
      out.write("function findIndex(text,findCharacter){\n");
      out.write("    var length = text.length;\n");
      out.write("    var index = [];\n");
      out.write("    var pos = text.indexOf(findCharacter);\n");
      out.write("    while(pos > -1) {\n");
      out.write("        index.push(pos);\n");
      out.write("        pos = text.indexOf(findCharacter, pos+1);\n");
      out.write("\n");
      out.write("    }\n");
      out.write("    return index;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("function renderChild(urlText){\n");
      out.write("    text = \"\";\n");
      out.write("    fields = [];\n");
      out.write("\n");
      out.write("    var x = urlText;\n");
      out.write("    var open = findIndex(x,\"{\");\n");
      out.write("    var close = findIndex(x,\"}\");\n");
      out.write("    var renderField = \"\";\n");
      out.write("\n");
      out.write("    $(\".removeDiv\").remove();\n");
      out.write("    $(\"#inputModal\").modal(\"show\");\n");
      out.write("\n");
      out.write("    for(i=0;i<open.length;i++){\n");
      out.write("        var field = x.substring(open[i]+1,close[i]);\n");
      out.write("        fields.push(field);\n");
      out.write("        renderField = \"<div class='removeDiv'><label>\"+field+\"</label>:\"+\"<input id=\"+field+\" type='text' /></div>\";\n");
      out.write("        $(\"#inputArea\").append(renderField);\n");
      out.write("    }\n");
      out.write("    text = x;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("    function clickSend() {\n");
      out.write("        for (var z in fields) {\n");
      out.write("            text = text.replace(\"{\" + fields[z] + \"}\", $(\"#\" + fields[z]).val());\n");
      out.write("        }\n");
      out.write("        $(\"#inputModal\").modal(\"hide\");\n");
      out.write("        var currentOuCode = $(\"input[id=currentOuCode]\").val();\n");
      out.write("        var currentUserName = $(\"input[id=currentUserName]\").val();\n");
      out.write("        \n");
      out.write("        $.ajax({\n");
      out.write("            type: 'GET',\n");
      out.write("            url: text,\n");
      out.write("            headers: {\n");
      out.write("                \"Content-type\": \"text/html\",\n");
      out.write("                \"ouCode\": currentOuCode,\n");
      out.write("                \"userName\": currentUserName\n");
      out.write("            },\n");
      out.write("            complete: function (data) {\n");
      out.write("                var myWindow = window.open('','_blank','resizable,scrollbars');\n");
      out.write("                myWindow.document.write('<body>'+data.responseText+'</body>');\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        //window.open(text);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    $('#sendEmail').click(function(){\n");
      out.write("\n");
      out.write("        data = {\n");
      out.write("            to : $('#to').val(),\n");
      out.write("            cc : $('#cc').val(),\n");
      out.write("            files : $('#files').val(),\n");
      out.write("            code : $('#code').val(),\n");
      out.write("            pameters : $('#pameters').val(),\n");
      out.write("            from : $('#from').val()\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        $.ajax({\n");
      out.write("            type: 'POST',\n");
      out.write("            headers: {\n");
      out.write("                Accept: 'application/json',\n");
      out.write("            },\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\n");
      out.write("            dataType: \"json\",\n");
      out.write("            url: '/' + (window.location.pathname.split('/')[1])+'/rest'+'/mail/sendEmail',\n");
      out.write("            data:JSON.stringify(data) ,\n");
      out.write("            complete: function (xhr) {\n");
      out.write("                if (xhr.readyState == 4) {\n");
      out.write("                    if (xhr.status == 200) {\n");
      out.write("                        $(\"#success\").attr(\"style\", \"display: inline\");\n");
      out.write("                    }\n");
      out.write("                    else {\n");
      out.write("                        $(\"#error\").attr(\"style\", \"display: inline\");\n");
      out.write("                    }\n");
      out.write("                } else {\n");
      out.write("                    $(\"#error\").attr(\"style\", \"display: inline\");\n");
      out.write("                }   \n");
      out.write("            },\n");
      out.write("\n");
      out.write("        });\n");
      out.write("\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /index.jsp(43,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("url");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005fset_005f0);
        }
        do {
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.requestURL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          int evalDoAfterBody = _jspx_th_c_005fset_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /index.jsp(44,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("currentURL");
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005fset_005f1);
        }
        do {
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(url, 0, fn:length(url) - fn:length(pageContext.request.requestURI))}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0, false));
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          int evalDoAfterBody = _jspx_th_c_005fset_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /index.jsp(50,23) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentURL}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f1_reused = false;
    try {
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /index.jsp(71,63) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentURL}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      _jspx_th_c_005fout_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f2_reused = false;
    try {
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent(null);
      // /index.jsp(84,63) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentURL}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      _jspx_th_c_005fout_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f3_reused = false;
    try {
      _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f3.setParent(null);
      // /index.jsp(103,67) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f3.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentURL}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
      if (_jspx_th_c_005fout_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      _jspx_th_c_005fout_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f3_reused);
    }
    return false;
  }
}
