/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-04-04 07:25:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tag.web.menu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menu_tagx
    extends javax.servlet.jsp.tagext.SimpleTagSupport
    implements org.apache.jasper.runtime.JspSourceDependent {


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.servlet.jsp.JspContext jspContext;
  private java.io.Writer _jspx_sout;
  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public void setJspContext(javax.servlet.jsp.JspContext ctx) {
    super.setJspContext(ctx);
    java.util.ArrayList _jspx_nested = null;
    java.util.ArrayList _jspx_at_begin = null;
    java.util.ArrayList _jspx_at_end = null;
    this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, null);
  }

  public javax.servlet.jsp.JspContext getJspContext() {
    return this.jspContext;
  }
  private java.lang.String id;
  private java.lang.Boolean render;
  private java.lang.String z;

  public java.lang.String getId() {
    return this.id;
  }

  public void setId(java.lang.String id) {
    this.id = id;
    jspContext.setAttribute("id", id);
  }

  public java.lang.Boolean getRender() {
    return this.render;
  }

  public void setRender(java.lang.Boolean render) {
    this.render = render;
    jspContext.setAttribute("render", render);
  }

  public java.lang.String getZ() {
    return this.z;
  }

  public void setZ(java.lang.String z) {
    this.z = z;
    jspContext.setAttribute("z", z);
  }

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    return _jsp_instancemanager;
  }

  private void _jspInit(javax.servlet.ServletConfig config) {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(config.getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(config);
  }

  public void _jspDestroy() {
  }

  public void doTag() throws javax.servlet.jsp.JspException, java.io.IOException {
    javax.servlet.jsp.PageContext _jspx_page_context = (javax.servlet.jsp.PageContext)jspContext;
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest) _jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse) _jspx_page_context.getResponse();
    javax.servlet.http.HttpSession session = _jspx_page_context.getSession();
    javax.servlet.ServletContext application = _jspx_page_context.getServletContext();
    javax.servlet.ServletConfig config = _jspx_page_context.getServletConfig();
    javax.servlet.jsp.JspWriter out = jspContext.getOut();
    _jspInit(config);
    jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,jspContext);
    if( getId() != null ) 
      _jspx_page_context.setAttribute("id", getId());
    if( getRender() != null ) 
      _jspx_page_context.setAttribute("render", getRender());
    if( getZ() != null ) 
      _jspx_page_context.setAttribute("z", getZ());

    try {
      out.write("<style>");
      out.write("\n");
      out.write("\t\theader {\n");
      out.write("\t\t\tdisplay: block;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\theader {\n");
      out.write("\t\t\t/*position: absolute;*/\n");
      out.write("\t\t\ttop: 0;\n");
      out.write("\t\t\tleft: 0;\n");
      out.write("\t\t\theight: 30px;\n");
      out.write("\t\t\twidth: 100%;\n");
      out.write("\t\t\tbackground: #337ab7;\n");
      out.write("\t\t\tz-index: 3;\n");
      out.write("\t\t\t/* Force Hardware Acceleration in WebKit */\n");
      out.write("\t\t\t-webkit-transform: translateZ(0);\n");
      out.write("\t\t\t-webkit-backface-visibility: hidden;\n");
      out.write("\t\t\t-webkit-transition-property: -webkit-transform;\n");
      out.write("\t\t\t-moz-transition-property: -moz-transform;\n");
      out.write("\t\t\ttransition-property: transform;\n");
      out.write("\t\t\t-webkit-transition-duration: 0.4s;\n");
      out.write("\t\t\t-moz-transition-duration: 0.4s;\n");
      out.write("\t\t\ttransition-duration: 0.4s;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\theader.lateral-menu-is-open {\n");
      out.write("\t\t\t/* translate to show the lateral menu */\n");
      out.write("\t\t\t-webkit-transform: translateX(400px);\n");
      out.write("\t\t\t-moz-transform: translateX(400px);\n");
      out.write("\t\t\t-ms-transform: translateX(400px);\n");
      out.write("\t\t\t-o-transform: translateX(400px);\n");
      out.write("\t\t\ttransform: translateX(400px);\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\theader.is-fixed {\n");
      out.write("\t\t\tposition: fixed;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\t@media only screen and (min-width: 768px) {\n");
      out.write("\t\t\theader {\n");
      out.write("\t\t\t\theight: 30px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t");
      out.write("</style>");
      out.write("<header/>");
    } catch( java.lang.Throwable t ) {
      if( t instanceof javax.servlet.jsp.SkipPageException )
          throw (javax.servlet.jsp.SkipPageException) t;
      if( t instanceof java.io.IOException )
          throw (java.io.IOException) t;
      if( t instanceof java.lang.IllegalStateException )
          throw (java.lang.IllegalStateException) t;
      if( t instanceof javax.servlet.jsp.JspException )
          throw (javax.servlet.jsp.JspException) t;
      throw new javax.servlet.jsp.JspException(t);
    } finally {
      jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,super.getJspContext());
      ((org.apache.jasper.runtime.JspContextWrapper) jspContext).syncEndTagFile();
    }
  }
}
